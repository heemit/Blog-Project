# Generated by Django 5.1.4 on 2024-12-24 14:30

import django.db.models.deletion
import grape_js.models
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, help_text='Extra parameters related to the model.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the object was created.', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the object was last updated.', null=True)),
                ('category', models.CharField(help_text='The name of the blog category.', max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='A unique slug for the category, used in URLs.', max_length=100, null=True, unique=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='The user who created the object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Blog Categories',
                'ordering': ['category'],
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, help_text='Extra parameters related to the model.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the object was created.', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the object was last updated.', null=True)),
                ('title', models.CharField(help_text='The title of the blog post.', max_length=200)),
                ('sub_title', models.CharField(blank=True, help_text='An optional subtitle for the blog post.', max_length=200, null=True)),
                ('thumbnail', models.CharField(blank=True, help_text="The relative path to the blog thumbnail image in GitHub (e.g., 'blog/image1.jpg').", max_length=255, null=True)),
                ('featured_text', grape_js.models.GrapeJsHTMLField(blank=True, help_text='A featured text or excerpt from the blog, with rich text support.', null=True)),
                ('text', grape_js.models.GrapeJsHTMLField(blank=True, help_text='The main content of the blog post, with rich text support.', null=True)),
                ('slug', models.SlugField(blank=True, help_text='A unique slug for the blog, auto-generated based on the title.', null=True, unique=True)),
                ('readtime', models.CharField(blank=True, help_text='An estimated reading time for the blog post.', max_length=200, null=True)),
                ('tags', models.TextField(blank=True, default='all', help_text='A list of tags for the blog (comma-separated).', null=True)),
                ('order_by', models.IntegerField(default=0, help_text='The ordering of the blog post. Higher numbers come first.')),
                ('created_by', models.ForeignKey(blank=True, help_text='The user who created the object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(help_text='The category to which the blog belongs.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.blogcategory')),
            ],
            options={
                'verbose_name_plural': 'Blog',
                'ordering': ['order_by'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalBlog',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, help_text='Extra parameters related to the model.', null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='The date and time when the object was created.', null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='The date and time when the object was last updated.', null=True)),
                ('title', models.CharField(help_text='The title of the blog post.', max_length=200)),
                ('sub_title', models.CharField(blank=True, help_text='An optional subtitle for the blog post.', max_length=200, null=True)),
                ('thumbnail', models.CharField(blank=True, help_text="The relative path to the blog thumbnail image in GitHub (e.g., 'blog/image1.jpg').", max_length=255, null=True)),
                ('featured_text', grape_js.models.GrapeJsHTMLField(blank=True, help_text='A featured text or excerpt from the blog, with rich text support.', null=True)),
                ('text', grape_js.models.GrapeJsHTMLField(blank=True, help_text='The main content of the blog post, with rich text support.', null=True)),
                ('slug', models.SlugField(blank=True, help_text='A unique slug for the blog, auto-generated based on the title.', null=True)),
                ('readtime', models.CharField(blank=True, help_text='An estimated reading time for the blog post.', max_length=200, null=True)),
                ('tags', models.TextField(blank=True, default='all', help_text='A list of tags for the blog (comma-separated).', null=True)),
                ('order_by', models.IntegerField(default=0, help_text='The ordering of the blog post. Higher numbers come first.')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('category', models.ForeignKey(blank=True, db_constraint=False, help_text='The category to which the blog belongs.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='web.blogcategory')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, help_text='The user who created the object.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical blog',
                'verbose_name_plural': 'historical Blog',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBlogCategory',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, help_text='Extra parameters related to the model.', null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='The date and time when the object was created.', null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='The date and time when the object was last updated.', null=True)),
                ('category', models.CharField(db_index=True, help_text='The name of the blog category.', max_length=100)),
                ('slug', models.SlugField(blank=True, help_text='A unique slug for the category, used in URLs.', max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, help_text='The user who created the object.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical blog category',
                'verbose_name_plural': 'historical Blog Categories',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
